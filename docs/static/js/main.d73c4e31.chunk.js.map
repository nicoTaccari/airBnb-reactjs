{"version":3,"sources":["components/Price.js","components/Hero.js","components/DateFilter.js","components/OptionsFilter.js","components/Filters.js","components/Hotel.js","components/Hotels.js","App.js","serviceWorker.js","index.js"],"names":["Price","props","price","precioCadena","index","push","key","className","style","margin","opacity","Hero","Moment","locale","this","filters","dateFrom","dateTo","country","rooms","format","Component","DateFilter","handleDateChange","bind","event","onFilterChange","name","date","value","onChange","type","OptionsFilter","handleOptionChange","console","log","target","options","icon","selected","width","defaultValue","map","opcion","Filters","payload","justifyContent","Hotel","hotel","src","photo","alt","slug","description","marginTop","city","href","Hotels","displayFilteredHotels","hotels","length","App","state","Date","add","filteredHotels","isAllLoaded","handleFilterChange","filter","availabilityFrom","availabilityTo","parseInt","trim","toLowerCase","newFilteredHotels","filterHotels","setState","fetch","response","ok","Error","statusText","json","warning","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d73c4e31.chunk.js","sourcesContent":["import React from 'react';\n\nconst Price = (props) => {\n    const { price } = props;\n\n    let precioCadena = [];\n    for (let index = 0; index < price; index++) {\n      precioCadena.push(\n        <i\n          key={index}\n          className=\"fas fa-dollar-sign\"\n          style={{ margin: \"0 .125em\" }}\n        ></i>\n      );\n    }\n    for (let index = price; index < 4; index++) {\n      precioCadena.push(\n        <i\n          key={index}\n          className=\"fas fa-dollar-sign\"\n          style={{ margin: \"0 .125em\", opacity: \".25\" }}\n        ></i>\n      );\n    }\n    return precioCadena;\n  };\n\nexport default Price;","import React, { Component } from \"react\";\nimport Moment from \"moment\";\nimport 'moment/locale/es';\nimport Price from './Price'\n\nclass Hero extends Component {\n  constructor(props) {\n    super(props);\n    Moment.locale(\"es\");\n  }\n\n  render() {\n    const { dateFrom, dateTo, country, price, rooms} = this.props.filters;\n    \n    return (\n      <section className=\"hero is-primary\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title\">Hoteles</h1>\n            <h2 className=\"subtitle\">\n              desde el <strong>{Moment(dateFrom).format('dddd, D MMMM [de] Y')} </strong> \n              hasta el{\" \"} <strong>{Moment(dateTo).format('dddd, D MMMM [de] Y')}</strong>\n              {\" \"} {country === 'select' ? \"\" : \"en \" + country} {\" \"}\n              {price === 'select' ? \"\" : \"por\" + Price(price)} {\" \"}\n              {rooms === 'select' ? \"\" : \"de hasta \" + rooms + \" habitaciones\"}\n\n            </h2>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Hero\n","import React, { Component } from \"react\";\n\nclass DateFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = this.handleDateChange.bind(this);\n\n  }\n\n  handleDateChange(event) {\n      this.props.onFilterChange(event);\n  }\n\n  render() {\n      const { name, date } = this.props;\n    return (\n      <>\n        <nav className=\"level\">\n          <div className=\"level-item has-text-centered\">\n            <div className=\"field\">\n              <div className=\"control has-icons-left\">\n                <input className=\"input\" name={ name } value= { date } onChange={ this.handleDateChange } type=\"date\" />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-sign-in-alt\"></i>\n                </span>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default DateFilter;\n","import React, { Component } from \"react\";\n\nclass OptionsFilter extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleOptionChange = this.handleOptionChange.bind(this);\n  }\n\n  handleOptionChange(event) {\n      console.log(event.target.value)\n      this.props.onFilterChange(event);\n  }\n\n//   selectItems(options) {\n//     const listItems = options.map((item, index) => (\n//         <option key={index} name={item.name}>\n//         {item.name}\n//         </option>\n//       ));\n//       return listItems\n//   }\n\n  render() {\n      const { options, icon, selected, name } = this.props\n    return (\n      <>\n        <div className=\"field\">\n          <div className=\"control has-icons-left\">\n            <div className=\"select\" style={{ width: \"100%\" }}>\n            <select defaultValue={selected} name={name} onChange={this.handleOptionChange}>\n              {options.map((opcion)=> <option value={opcion.value}>{opcion.name}</option>)}  \n            </select>\n            </div>\n            <div className=\"icon is-small is-left\">\n              <i className={\"fa fa-\" + icon}></i>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default OptionsFilter;\n","import React, { Component } from \"react\";\nimport DateFilter from \"./DateFilter\";\nimport OptionsFilter from \"./OptionsFilter\";\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  onFilterChange(event) {\n    let payload = this.props.filters;\n    payload[event.target.name] = event.target.value;\n    this.props.onFilterChange(payload);\n  }\n\n  \n\n  render() {\n    const { filters } = this.props;\n    const countryOptions = [\n      { value: \"select\", name: \"Todos los países\" },\n      { value: \"Argentina\", name: \"Argentina\" },\n      { value: \"Brasil\", name: \"Brasil\" },\n      { value: \"Chile\", name: \"Chile\" },\n      { value: \"Uruguay\", name: \"Uruguay\" }\n    ];\n    const priceOptions = [\n      { value: \"select\", name: \"Cualquier precio\" },\n      { value: 1, name: \"$\" },\n      { value: 2, name: \"$$\" },\n      { value: 3, name: \"$$$\" },\n      { value: 4, name: \"$$$$\" }\n    ];\n    const roomOptions = [\n      { value: \"select\", name: \"Cualquier tamaño\" },\n      { value: 10, name: \"Hotel pequeño\" },\n      { value: 20, name: \"Hotel mediano\" },\n      { value: 30, name: \"Hotel grande\" }\n    ];\n    return (\n      <>\n        <nav className=\"navbar is-info\" style={{ justifyContent: \"center\" }}>\n          <div className=\"navbar-item\">\n            <DateFilter\n              date={filters.dateFrom}\n              name=\"dateFrom\"\n              onFilterChange={this.onFilterChange}\n              icon=\"sign-in-alt\"\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <DateFilter\n              date={filters.dateTo}\n              name=\"dateTo\"\n              onFilterChange={this.onFilterChange}\n              icon=\"sign-out-alt\"\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <OptionsFilter\n              name=\"country\"\n              options={countryOptions}\n              selected={filters.country}\n              onFilterChange={this.onFilterChange}\n              icon=\"globe\"\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <OptionsFilter\n              options={priceOptions}\n              name=\"price\"\n              selected={filters.price}\n              onFilterChange={this.onFilterChange}\n              icon=\"dollar-sign\"\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <OptionsFilter\n              options={roomOptions}\n              name=\"rooms\"\n              selected={filters.rooms}\n              onFilterChange={this.onFilterChange}\n              icon=\"bed\"\n            />\n          </div>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Filters;\n","import React, { Component } from \"react\";\nimport Price from './Price'\n\nclass Hotel extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    const { hotel } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img src={hotel.photo} alt={hotel.slug} />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <p className=\"title is-4\">{hotel.name}</p>\n          <p>{hotel.description}</p>\n          <div\n            className=\"field is-grouped is-grouped-multiline\"\n            style={{ marginTop: \"1em\" }}\n          >\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-medium is-info\">\n                  <i className=\"fas fa-map-marker\"></i>\n                </span>\n                <span className=\"tag is-medium\">{hotel.city}</span>\n              </div>\n            </div>\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-medium is-info\">\n                  <i className=\"fas fa-bed\"></i>\n                </span>\n                <span className=\"tag is-medium\">\n                  {hotel.rooms} Habitaciones\n                </span>\n              </div>\n            </div>\n            <div className=\"control\">\n              <div className=\"tags\">\n                <span className=\"tag is-medium is-info\">{Price(hotel)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <a\n            href=\"#\"\n            className=\"card-footer-item has-background-primary has-text-white has-text-weight-bold\"\n          >\n            Reservar\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hotel","import React, { Component } from \"react\";\nimport Hotel from './Hotel'\n\nclass Hotels extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayFilteredHotels = this.displayFilteredHotels.bind(this);\n  }\n\n  displayFilteredHotels(hotels) {\n    if(hotels.length > 0){\n      return (hotels.map((hotel, index) => (\n                <div className=\"column is-one-third\" key={index}>\n                <Hotel hotel={hotel}/>\n              </div>\n            )\n     ));\n    } else {\n      return (\n        <article className=\"message is-warning\">\n          <div className=\"message-body\">\n            No se han encontrado hoteles con los criterios definidos\n          </div>\n        </article>\n      );\n    }\n  }\n\n  render() {\n    const { hotels } = this.props;\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns is-multiline\">\n            {this.displayFilteredHotels(hotels)}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Hotels;\n","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport Hero from \"./components/Hero\";\nimport Filters from \"./components/Filters\";\nimport Hotels from \"./components/Hotels\";\nimport Moment from \"moment\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: {\n        dateFrom: Moment(new Date()).format(\"YYYY-MM-DD\"),\n        dateTo: Moment()\n          .add(1, \"month\")\n          .format(\"YYYY-MM-DD\"),\n        country: \"select\",\n        price: \"select\",\n        rooms: \"select\"\n      },\n      hotels: [],\n      filteredHotels: [],\n      isAllLoaded: false\n    };\n\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  filterHotels(filters,hotels) {\n    const { dateFrom, dateTo, country, price, rooms} = filters;\n    console.log(filters)\n    console.log(hotels)\n    return hotels.filter(hotel => {\n      return Moment(hotel.availabilityFrom).format(\"YYYY-MM-DD\") >= dateFrom &&\n             Moment(hotel.availabilityTo).format(\"YYYY-MM-DD\") <= dateTo &&\n             hotel.rooms <= (rooms !== \"select\" ? rooms : hotel.rooms) &&\n             hotel.price <=(price !== \"select\" ? parseInt(price) : hotel.price) &&\n             hotel.country.trim().toLowerCase() === (country !== \"select\" ? country.trim().toLowerCase() : hotel.country.trim().toLowerCase())\n    })\n  }\n\n  handleFilterChange(payload) {\n    const newFilteredHotels = this.filterHotels(payload,this.state.hotels);\n    console.log(newFilteredHotels);\n    this.setState({\n      filters: payload,\n      filteredHotels: newFilteredHotels\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\n        \"https://wt-8a099f3e7c73b2d17f4e018b6cfd6131-0.sandbox.auth0-extend.com/acamica\"\n      );\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      const json = await response.json();\n      this.setState({\n        hotels: json,\n        filteredHotels: json,\n        isAllLoaded: true\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  warning() {\n    return (\n      <article className=\"message is-warning\">\n        <div className=\"message-body\">\n          No se han encontrado hoteles con los criterios definidos\n        </div>\n      </article>\n    );\n  }\n\n  render() {\n    const { filters, filteredHotels } = this.state;\n\n    return (\n      <Fragment>\n        <Hero filters={filters} />\n        <Filters filters={filters} onFilterChange={this.handleFilterChange} />\n        {this.state.isAllLoaded ? (\n          <Hotels hotels={filteredHotels} />\n        ) : (\n          this.warning()\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}